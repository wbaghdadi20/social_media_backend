name: CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: "Clean up Docker Images and Build Cache"
        run: |
          docker image prune --all --force || true
          docker builder prune --force || true

      - name: "Remove Existing Containers"
        run: |
          docker rm -f app_instance_1 || true
          docker rm -f app_instance_2 || true
          docker rm -f nginx-container || true

      - name: "Create Docker Volume"
        run: docker volume create db_volume || true

      - name: "Create Docker Network"
        run: docker network create app-network || true

      - name: "Build FastAPI Docker Image"
        run: docker build . -t socialmedia-be

      - name: "Build Nginx Docker Image"
        run: docker build -f Dockerfile.nginx . -t nginx-proxy

      - name: "Run FastAPI Docker Containers"
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
          ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
          SQLALCHEMY_DATABASE_URL: ${{ secrets.SQLALCHEMY_DATABASE_URL }}
        run: |
          docker run -d \
            --name app_instance_1 \
            --network app-network \
            -v db_volume:/usr/src/app/db \
            -e SECRET_KEY=${SECRET_KEY} \
            -e ALGORITHM=${ALGORITHM} \
            -e ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES} \
            -e SQLALCHEMY_DATABASE_URL=${SQLALCHEMY_DATABASE_URL} \
            socialmedia-be

          docker run -d \
            --name app_instance_2 \
            --network app-network \
            -v db_volume:/usr/src/app/db \
            -e SECRET_KEY=${SECRET_KEY} \
            -e ALGORITHM=${ALGORITHM} \
            -e ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES} \
            -e SQLALCHEMY_DATABASE_URL=${SQLALCHEMY_DATABASE_URL} \
            socialmedia-be

      - name: "Run Nginx Docker Container"
        run: |
          docker run -d \
            --name nginx-container \
            --network app-network \
            -p 80:80 \
            nginx-proxy
